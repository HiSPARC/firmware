(DATABASE_VERSION 15)
(ENTITY_FILE
  (ENTITY
    (OBID "ent0c012cfa0ae42bf483510f7042c40000")
    (PROPERTIES
      (PROPERTY "STAMP_PLATFORM" "PC")
      (PROPERTY "STAMP_REVISION" "Revision 8")
      (PROPERTY "STAMP_TIME" "Tue May 15 14:52:17 2012")
      (PROPERTY "STAMP_TOOL" "Ease")
      (PROPERTY "STAMP_VERSION" "7.3")
    )
    (HDL_IDENT
      (NAME "LED_DATA_DECODER")
      (USERNAME 1)
    )
    (GEOMETRY 0 0 1472 1216)
    (SIDE 0)
    (HDL 1)
    (EXTERNAL 0)
    (OBJSTAMP
      (DESIGNER "hansvk")
      (CREATED 1337085600 "Tue May 15 14:40:00 2012")
      (MODIFIED 1337085865 "Tue May 15 14:44:25 2012")
    )
    (PORT
      (OBID "eprt0c012cfa5be42bf483510f70d2c40000")
      (HDL_IDENT
        (NAME "LED_DATA_IN")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 216 40 296)
      (SIDE 3)
      (LABEL
        (POSITION 64 256)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 1)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "LED_DATA_IN")
      )
    )
    (PORT
      (OBID "eprt0c012cfa2de42bf483510f7033c40000")
      (HDL_IDENT
        (NAME "SYSRST")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 536 40 616)
      (SIDE 3)
      (LABEL
        (POSITION 64 576)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 3)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "SYSRST")
      )
    )
    (PORT
      (OBID "eprt0c012cfa2de42bf483510f7043c40000")
      (HDL_IDENT
        (NAME "CLK10MHz")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 664 40 744)
      (SIDE 3)
      (LABEL
        (POSITION 64 704)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 3)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "CLK10MHz")
      )
    )
    (PORT
      (OBID "eprt0c012cfadde42bf483510f70d3c40000")
      (HDL_IDENT
        (NAME "SLAVE_PATTERN")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 2)
          (CONSTRAINT
            (DIRECTION 1)
            (RANGE "3" "0")
          )
        )
      )
      (GEOMETRY 1432 984 1512 1064)
      (SIDE 1)
      (LABEL
        (POSITION 1408 1024)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 1)
        (ALIGNMENT 5)
        (FORMAT 35)
        (TEXT "SLAVE_PATTERN(3:0)")
      )
    )
    (ARCH_DECLARATION 2 "arch0c012cfa0ae42bf483510f7062c40000" "rtl")
  )
  (ARCH_DEFINITION
    (OBID "arch0c012cfa0ae42bf483510f7062c40000")
    (HDL_IDENT
      (NAME "rtl")
      (USERNAME 1)
    )
    (TYPE 2)
    (HDL_FILE
      (VHDL_FILE
        (OBID "file0c012cfa0ae42bf483510f7082c40000")
        (NAME "rtl.vhd")
        (VALUE "-- EASE/HDL begin --------------------------------------------------------------"
               "-- "
               "-- Architecture 'rtl' of entity 'LED_DATA_DECODER'."
               "-- "
               "--------------------------------------------------------------------------------"
               "-- "
               "-- Copy of the interface declaration:"
               "-- "
               "--   port("
               "--     CLK10MHz      : in     std_logic;"
               "--     LED_DATA_IN   : in     std_logic;"
               "--     SLAVE_PATTERN : out    std_logic_vector(3 downto 0);"
               "--     SYSRST        : in     std_logic);"
               "-- "
               "-- EASE/HDL end ----------------------------------------------------------------"
               ""
               "architecture rtl of LED_DATA_DECODER is"
               ""
               "signal SAMPLE_COUNT : integer range 385 downto 0; -- Counter which samples the incomming serial data"
               "signal GET_START_BYTE : std_logic_vector (7 downto 0); "
               "signal GET_PATTERN_BYTE : std_logic_vector (7 downto 0); "
               "signal GET_STOP_BYTE : std_logic_vector (7 downto 0); "
               ""
               ""
               "begin"
               ""
               " -- Sample counter"
               "  process(CLK10MHz, SYSRST)                               "
               "  begin"
               " 	if SYSRST = '1' then"
               "  	SAMPLE_COUNT <= 0;"
               "  elsif CLK10MHz'event and CLK10MHz = '1' then"
               "  	if SAMPLE_COUNT = 0 and LED_DATA_IN = '0' then"
               "   		SAMPLE_COUNT <= 0 ; -- wait for start "
               "    elsif SAMPLE_COUNT = 8 and LED_DATA_IN = '0' then"
               "   		SAMPLE_COUNT <= 0 ; -- false start"
               "   	elsif SAMPLE_COUNT = 385 then "
               "   		SAMPLE_COUNT <= 0; -- end"
               "    else"
               "   		SAMPLE_COUNT <= SAMPLE_COUNT + 1;"
               "   	end if;"
               " 	end if; "
               "  end process;"
               ""
               "  process(CLK10MHz,SYSRST,SAMPLE_COUNT,LED_DATA_IN)"
               "  begin"
               " 	if SYSRST = '1' then"
               "  	GET_START_BYTE <= \"00000000\";"
               "  	GET_PATTERN_BYTE <= \"00000000\";"
               "  	GET_STOP_BYTE <= \"00000000\";"
               "  elsif CLK10MHz'event and CLK10MHz = '1' then"
               "    case (SAMPLE_COUNT) is"
               "      when 8 => GET_START_BYTE(7) <= LED_DATA_IN;"
               "      when 24 => GET_START_BYTE(6) <= LED_DATA_IN;"
               "      when 40 => GET_START_BYTE(5) <= LED_DATA_IN;"
               "      when 56 => GET_START_BYTE(4) <= LED_DATA_IN;"
               "      when 72 => GET_START_BYTE(3) <= LED_DATA_IN;"
               "      when 88 => GET_START_BYTE(2) <= LED_DATA_IN;"
               "      when 104 => GET_START_BYTE(1) <= LED_DATA_IN;"
               "      when 120 => GET_START_BYTE(0) <= LED_DATA_IN;"
               "      when 136 => GET_PATTERN_BYTE(7) <= LED_DATA_IN;"
               "      when 152 => GET_PATTERN_BYTE(6) <= LED_DATA_IN;"
               "      when 168 => GET_PATTERN_BYTE(5) <= LED_DATA_IN;"
               "      when 184 => GET_PATTERN_BYTE(4) <= LED_DATA_IN;"
               "      when 200 => GET_PATTERN_BYTE(3) <= LED_DATA_IN;"
               "      when 216 => GET_PATTERN_BYTE(2) <= LED_DATA_IN;"
               "      when 232 => GET_PATTERN_BYTE(1) <= LED_DATA_IN;"
               "      when 248 => GET_PATTERN_BYTE(0) <= LED_DATA_IN;"
               "      when 264 => GET_STOP_BYTE(7) <= LED_DATA_IN;"
               "      when 280 => GET_STOP_BYTE(6) <= LED_DATA_IN;"
               "      when 296 => GET_STOP_BYTE(5) <= LED_DATA_IN;"
               "      when 312 => GET_STOP_BYTE(4) <= LED_DATA_IN;"
               "      when 328 => GET_STOP_BYTE(3) <= LED_DATA_IN;"
               "      when 344 => GET_STOP_BYTE(2) <= LED_DATA_IN;"
               "      when 360 => GET_STOP_BYTE(1) <= LED_DATA_IN;"
               "      when 376 => GET_STOP_BYTE(0) <= LED_DATA_IN;"
               "      when others => "
               "    end case;"
               " 	end if; "
               "  end process;"
               ""
               "  process(CLK10MHz, SYSRST)                               "
               "  begin"
               " 	if SYSRST = '1' then"
               "  	SLAVE_PATTERN <= \"0000\";"
               "  elsif CLK10MHz'event and CLK10MHz = '1' then"
               "  	if SAMPLE_COUNT = 384 and GET_START_BYTE = \"10011001\" and GET_STOP_BYTE = \"01100110\" then"
               "	    SLAVE_PATTERN(3) <= GET_PATTERN_BYTE(5); -- 3 Hit Slave Ch 1"
               " 	    SLAVE_PATTERN(2) <= GET_PATTERN_BYTE(4); -- 3 Hit Slave Ch 2"
               " 	    SLAVE_PATTERN(1) <= GET_PATTERN_BYTE(1); -- 2 Hit Slave Ch 1"
               " 	    SLAVE_PATTERN(0) <= GET_PATTERN_BYTE(0); -- 2 Hit Slave Ch 2"
               "    else"
               "  	  SLAVE_PATTERN <= \"0000\";"
               "   	end if;"
               " 	end if; "
               "  end process;"
               ""
               ""
               "end rtl ; -- of LED_DATA_DECODER"
               ""
               "")
      )
    )
  )
)
(END_OF_FILE)
